4페이지
깃허브와 여러가지 협업 툴을 이용한 협업과
자바 프로젝트 크게 2가지로 나눠 설명하겠다

5페이지
깃허브, 깃허브 데스크탑, 카카오톡, 노션을 이용해서 작업을 했다.
그중 깃허브 데스크탑이 중요하니 자세히 설명하겠다.

6페이지
우리 깃허브 페이지. 각 조원별로 개인 브랜치 만들어서 이용하는 방식으로 했다/
그런데 오픈소스 없이 이미지나 음악 같은 것도 직접 작업하다보니 해야할 것이 너무 많고 복잡하더라

7페이지
그래서 깃허브의 프로젝트라는 기능을 사용했다.
해야하는 일을 To Do에 등록해두고 진행중이면 In Progress로 옮기고 끝나면 Done으로 옮기는 식으로 작업을 기록하며 진행했다

8페이지
우리 조의 가장 큰 특징 깃허브 데스크탑
접근성이 가장 좋고 변경내역 확인이나 브랜치 이동 등이 쉽다

9페이지
각자 개인별로 브랜치를 하나씩 만들고 수정하고 요청하면 조장/팀장이 확인하고 메인 브랜치에 병합하는 방식으로 진행

10페이지
깃허브 데스크탑으로 하는 방법이다. 버튼 2개만 누르면 되고 마지막으로 업데이트한 시간 등을 알 수 있어서 편하다

11페이지
pull request는 깃허브 데스크탑에서 버튼 하나만 누르면 바로 해당 페이지로 이동이 된다

12페이지
조장, 팀장이 확인하고 병합하며 적용

13페이지
아무래도 오픈소스나 참고자료 없이 구조부터 직접 짜왔기 때문에 시행착오가 많았고, 참고할만한 자료가 없어 수정 사항이 많았던 만큼 커밋 횟수도 많았다

14페이지
협업엔 코딩만 있는게 아니다. 바닥부터 다져나가야하는 새로운 게임이기 때문에 각종 의견이나 아이디어도 많이 필요했고 그 과정에서도 아이디어를 모으고, 선별하는 과정에서 카카오톡을 이용했다

15페이지
아무래도 깃허브나 카카오톡도 좋긴 하지만 형식이 제한적이다 보니 원하는 아이디어를 제대로 공유하기 위해 불편한 점이 있었고, 해결을 위해 노션을 활용했다.
노션을 통해 각 페이지별로 만들어야 할 내용이나 구상한 내용 등을 보기 쉽게 정리할 수 있었다.

16페이지
프로젝트 제작 초기 구상부터 다들 적극적으로 아이디어를 내준 덕분에 많은 아이디어가 쌓였다. 그중에서 투표를 통해 텍스트 기반 게임을 만들기로 결정했다

17페이지
원래 초기 구상 과정에서는 우리가 아직 GUI를 구성하는 것을 배우지 못했기 때문에 텍스트로만 진행할려고 했었다.
하지만 이왕 만드는거 제대로 공부하고 제대로 만들자는 생각에 GUI를 구성하고 사진, 음악 등을 추가하기 위해 스스로 공부하게 되었다.

18페이지
우리 프로젝트의 가장 큰 특징은 참고할만한 소스가 전혀 없었다는 것이다. 기초부터 공부해야했고 아직 경험도 없는데 참고할만한 오픈소스마저 없다보니 막막한 부분이 많았다.
프로젝트 제작도 중요한 일이지만 공부도 중요한 법이니 각자 파트를 나누고, 해야할 일을 정리해서 공부하고, 뼈대를 만든 다음, 다른 조원들에게 알려주고, 모든 조원이 같이 만들어보는 식으로 협업했다.
이 과정을 통해 모든 조원이 골고루 배울 수 있는 기회가 되기도 했고, 자신이 맡은 파트가 끝나면 다른 사람의 파트를 도와주는 식으로 작업할 수 있었다.

19페이지
제작도 제작이지만 우리가 만든 코드 정도는 이해하고 또 참여할 수 있는 능력을 키우기 위해 굳이 필요없는 페이지도 만들어보며 공부했다

20페이지
뼈대부터 기획해야했고, 참고자료가 없다보니 회의 후에도 만들다보면 '어? 이거 이렇게 하자는 말 아니였어?', '난 이렇게 이해했는데?', '그거였어?' 등의 일이 많았다.
협업에 방해가 되는 경우가 간혹 있어서 아예 프로토타입을 만들어 의견을 수렴하기로 했다. 이 과정에서 노션이 굉장히 중요한 역할을 했다.

21페이지
프로토타입을 만들며, 또 만든 후에도 규격이나 변수명 등이 제멋대로 놀면 협업하는데 방해가 되니 카카오톡을 통해 규격, 변수명 등을 통일했다. 덕분에 버그가 생기는 일이 거의 없었다.

22페이지
심지어 이미지마저 직접 제작해야했다

23페이지
보기엔 투박하고 간소해보이지만 시선이 분산되지 않고 텍스트에 최대한 집중할 수 있도록 많은 수정을 거친 결과물이다

24페이지
폰트도 실제 일기같은 느낌을 살리면서 가독성도 살리기 위해 수십가지 폰트를 적용해봤다.
이 외에도 원래 중앙정렬이 되던 글씨를 위로 올린다던가 하는 섬세한 부분까지 많이 신경을 썼다

25페이지
아무래도 여러명이 작성하게 되면 쓰는 사람마다 문체도 다르고 분위기도 다를 수 있고
한명이 작성하게 되면 협업의 의미도 퇴색되고, 개인의 의견이 무시될 수 있기 때문에 특이한 방법을 통해서 협업을 했다
여기 보이는 것처럼 개인의 의견들, 기본 토대가 될 스토리를 한군데 모아서 정리하고
한명이 아까 작성한 내용을 토대로 대본을 작성하며 협업과 전체적인 분위기 모두 잡도록 노력했다.
7000자 가량되는 내용을 최대한 집중력이 흐트러지지 않고 읽을 수 있게끔 많이 노력했다

26페이지
또한 원맨쇼가 되지 않도록 하기 위해 중간중간 여러번 피드백을 받고, 다른 의견도 수렴하며 작성했다

27페이지
그냥 적용하면 줄바꿈도 되지 않고 중앙정렬이라 HTML 코드로 옮겨적었다

28페이지
아무래도 첫 작품이고, 전부 직접 구상하는 것이다 보니 시행착오가 많았다. 일단 구현에 성공한 것으로만 5가지 틀이 있었고, 그중에 가장 이해하기 쉽고, 협업하기 좋은 틀을 골라서 작업하게 됐다.

29페이지
그렇게 제작한 틀이 이거다. 메인 프레임을 만들고 그 위에 컴포넌트만 추가되고 사라지는 식으로 구현을 했다
생성자를 적극적으로 이용했으며, 기능별로 여러가지 메소드로 나누기도 했고, 무명클래스나 스태틱 등을 수업시간에 배운 내용을 최대한 활용했다

30페이지~32페이지까지 빠르게 넘기며
이게 한 페이지를 위한 코드다. 250줄 정도 된다. 여러명이 같이 작업했는데도 변수명과 규격을 미리 통일해놓고 서로 코드에 대해서 충분히 알려주고 협업했더니 버그가 거의 없었다.

33페이지
간단해 보이지만 padding 효과를 주기 위해 컴포넌트를 추가로 만들기도 하고
진행함에 따라서 텍스트나 사진도 바뀌고
특수한 경우엔 라이프까지 바뀌기도 하고
엔딩도 2가지로 나눠져서 각 다른 화면을 출력하게 하는 등 과정이 많았다

34페이지
위에서 말한 내용을 작업하는 과정이다.
반복적으로 쓰이는 코드는 따로 개별적인 메소드/클래스로 만들어서 캡슐화를 한 모습니다

35페이지
단순 자주 쓰이는 기능 외에 특수한 기능을 하는 코드들도 메소드화시켰다
무명 클래스를 이용해 가독성을 높혔다

36페이지
그렇게 완성된 후에는 버튼을 누르면 상황에 맞는 상호작용도 하고

37페이지
이런식으로 라이프가 감소하기도 하면서 진행이 됨